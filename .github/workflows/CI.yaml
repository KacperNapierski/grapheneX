name: CI workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'docker/**'
      - 'graphenex/**'
  
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - 'graphenex/**'



jobs:
  setup_linux:
    name: "Linux setup"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: update
        run: |
          sudo apt-get update
          sudo apt-get upgrade

      - name: 'install dependencies'
        run: |
          sudo apt install python3-pip
          python -m pip install --upgrade pip

      - name: 'install graphenex'
        run: python3 -m pip install graphenex

      - name: "python import issue workaround"
        run: sed -i '/Mapping/s/collections/collections.abc/' ~/.local/lib/python3.10/site-packages/prompt_toolkit/styles/from_dict.py

      - name: 'run graphenex'
        run: python -m graphenex

  linter_linux:
    name: "Linter check linux"
    runs-on: ubuntu-latest
    needs: setup_linux
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: 'flake8 python linter'
        uses: py-actions/flake8@v2



  setup_windows:
    name: "Windows setup"
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: 'install python' 
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.0'
          cache: 'pip'
        
      - name: 'update pip'
        run: python -m pip install --upgrade pip

      - name: 'install graphenex'
        run: python3 -m pip install graphenex

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path D:\a\grapheneX\grapheneX\graphenex
          Get-ChildItem


      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\rtools43
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\rtools43\usr
          Get-ChildItem


      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\vcpkg
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\hostedtoolcache\windows\python\3.10.0\x64
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\hostedtoolcache\windows\python\3.10.0\x64\lib
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\hostedtoolcache\windows\python\3.10.0\x64\lib\collections
          Get-ChildItem

      - name: 'testy'
        shell: pwsh
        run: |
          Set-Location -Path C:\hostedtoolcache\windows\python\3.10.0\x64\lib\site-packages\prompt_toolkit\styles
          Get-ChildItem

      - name: 'python import issue workaround'
        shell: pwsh
        run: (Get-Content C:\hostedtoolcache\windows\python\3.10.0\x64\lib\site-packages\prompt_toolkit\styles\from_dict.py) -Replace 'from collections import Mapping', 'from collections.abc import Mapping' | Set-Content C:\hostedtoolcache\windows\python\3.10.0\x64\lib\site-packages\prompt_toolkit\styles\from_dict.py

      - name: "pip update flask_socketio"
        run: puthon3 -m pip install --upgrade flask_socketio

      - name: 'run graphenex'
        run: graphenex

  linter_windows:
    name: "Linter check windows"
    runs-on: windows-latest
    needs: setup_windows
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: 'flake8 python linter'
        uses: py-actions/flake8@v2



